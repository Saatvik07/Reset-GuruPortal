[{"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\index.js":"1","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\Store\\ActionTypes.js":"2","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\Store\\Reducers\\auth.js":"3","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\App\\App.js":"4","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\Store\\ActionCreators\\auth.js":"5","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Login\\Login.jsx":"6","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Layout\\TopNavBar\\TopNavBar.jsx":"7","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Unauthorized\\Unauthorized.jsx":"8","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Layout\\Layout.jsx":"9","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\changePassword\\ChangePassword.jsx":"10","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\routes.js":"11","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\config.js":"12","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\addAvailability\\AddAvailability.jsx":"13","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Login\\NewAdminLogin.jsx":"14","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Profile\\Profile.jsx":"15","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\Store\\configureStore.js":"16","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Layout\\Footer\\Footer.jsx":"17"},{"size":977,"mtime":1611167597418,"results":"18","hashOfConfig":"19"},{"size":1397,"mtime":1611254133438,"results":"20","hashOfConfig":"19"},{"size":2762,"mtime":1611255212179,"results":"21","hashOfConfig":"19"},{"size":2020,"mtime":1611168064999,"results":"22","hashOfConfig":"19"},{"size":3167,"mtime":1611258351317,"results":"23","hashOfConfig":"19"},{"size":5188,"mtime":1611254205632,"results":"24","hashOfConfig":"19"},{"size":2985,"mtime":1611258861985,"results":"25","hashOfConfig":"19"},{"size":337,"mtime":1611167972304,"results":"26","hashOfConfig":"19"},{"size":780,"mtime":1611164375894,"results":"27","hashOfConfig":"19"},{"size":6049,"mtime":1611253872559,"results":"28","hashOfConfig":"19"},{"size":793,"mtime":1611253810460,"results":"29","hashOfConfig":"19"},{"size":382,"mtime":1611340154714,"results":"30","hashOfConfig":"19"},{"size":18675,"mtime":1611265920592,"results":"31","hashOfConfig":"19"},{"size":6553,"mtime":1611263204621,"results":"32","hashOfConfig":"19"},{"size":9122,"mtime":1611342822371,"results":"33","hashOfConfig":"19"},{"size":496,"mtime":1611164748396,"results":"34","hashOfConfig":"19"},{"size":4324,"mtime":1611342668442,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"427khf",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\index.js",[],["74","75"],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\Store\\ActionTypes.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\Store\\Reducers\\auth.js",[],["76","77"],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\App\\App.js",["78"],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\Store\\ActionCreators\\auth.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Login\\Login.jsx",["79"],"import React, { useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form } from 'formik';\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  CardBody,\r\n  Card,\r\n  Spinner,\r\n  Alert\r\n} from 'reactstrap';\r\nimport TextInput from './TextInput.jsx';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { loginAction} from '../../Store/ActionCreators/auth';\r\nimport './style.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearAlert, setAlert } from '../../Store/ActionCreators/alert';\r\n\r\nexport default function Login() {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector((state) => state.auth);\r\n    const alert = useSelector((state) => state.alert);\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string().required('Required'),\r\n        password: Yup.string().required('Required')\r\n    });\r\n\r\n    const handleSubmit = async (values) => {\r\n        try {\r\n        await dispatch(loginAction(values.email, values.password));\r\n        } catch (err) {\r\n        alert(err.message);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (!auth.isLoading) {\r\n        if (auth.error !== '') {\r\n            dispatch(setAlert({ message: auth.error, color: 'danger' }));\r\n        } else if (auth.user) {\r\n            dispatch(setAlert({ message: 'Successful login', color: 'success' }));\r\n            \r\n        }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        \r\n    }, [auth]);\r\n    if(auth.user){\r\n        if(auth.user.challengeName){\r\n            return <Redirect to=\"/new-guru-login\"/>\r\n        }\r\n        else{\r\n            return <Redirect to=\"/view-all-guru\"/>;\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n        <Container className=\"mb-100 mt-150\">\r\n            {alert.isAlert && (\r\n            <Row className=\"mb-2\">\r\n                <Col xs={12}>\r\n                <Alert color={alert.color}>{alert.msg}</Alert>\r\n                </Col>\r\n            </Row>\r\n            )}\r\n            <Formik\r\n            initialValues={{\r\n                email: '',\r\n                password: ''\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                dispatch(clearAlert());\r\n                if (!auth.isLoading) {\r\n                handleSubmit(values);\r\n                }\r\n            }}\r\n            >\r\n            {(props) => (\r\n                <Container>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col xs={12} md={8} lg={5}>\r\n                    <Card className=\"login-page bg-white shadow rounded border-0\">\r\n                        <CardBody>\r\n                        <h4 className=\"card-title text-center\">Login</h4>\r\n                        <Form>\r\n                            <Row className=\"mt-4 mb-4\">\r\n                            <Col xs={12}>\r\n                                <TextInput\r\n                                label=\"Email/Username\"\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                placeholder=\"Email/Username\"\r\n                                required\r\n                                />\r\n                            </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-4\">\r\n                            <Col xs={12}>\r\n                                <TextInput\r\n                                label=\"Password\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                required\r\n                                />\r\n                            </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                    <p className=\"mb-0 mt-2\">\r\n                                    <small className=\"text-primary mr-2\">\r\n                                        <Link to=\"/reset-password\">\r\n                                        Forgot Password?\r\n                                        </Link>\r\n                                    </small>\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"mt-4\">\r\n                                <Col xs={12}>\r\n                                    <Button color=\"primary\" type=\"submit\" block>\r\n                                    {auth.isLoading ? (\r\n                                        <Spinner></Spinner>\r\n                                    ) : (\r\n                                        <>Sign In</>\r\n                                    )}\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n            )}\r\n            </Formik>\r\n        </Container>\r\n        </div>\r\n    );\r\n    }","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Layout\\TopNavBar\\TopNavBar.jsx",["80","81"],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Unauthorized\\Unauthorized.jsx",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Layout\\Layout.jsx",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\changePassword\\ChangePassword.jsx",["82","83"],"import React, { useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form } from 'formik';\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  CardBody,\r\n  Card,\r\n  Alert,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport TextInput from '../Login/TextInput';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { changePassword } from '../../Store/ActionCreators/userDetails';\r\n\r\nimport './style.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearAlert, setAlert } from '../../Store/ActionCreators/alert';\r\nfunction ChangePassword() {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.user);\r\n    const auth = useSelector(state => state.auth);\r\n    const alert = useSelector((state) => state.alert);\r\n    const validationSchema = Yup.object().shape({ \r\n        oldPassword: Yup.string()\r\n            .min(8, 'Password has to be longer than 8 characters!')\r\n            .matches(\r\n            /^.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?].*$/,\r\n            'Needs one special character'\r\n            )\r\n            .matches(/[0-9]/, 'Needs one digit')\r\n            .matches(/[a-z]/, 'Needs one lowercase character')\r\n            .matches(/[A-Z]/, 'Needs one uppercase character')\r\n            .required('Required'),\r\n        newPassword: Yup.string()\r\n        .min(8, 'Password has to be longer than 8 characters!')\r\n        .matches(\r\n        /^.*[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?].*$/,\r\n        'Needs one special character'\r\n        )\r\n        .matches(/[0-9]/, 'Needs one digit')\r\n        .matches(/[a-z]/, 'Needs one lowercase character')\r\n        .matches(/[A-Z]/, 'Needs one uppercase character')\r\n        .required('Required'),\r\n    });\r\n    const handleSubmit = async (values) => {\r\n        try {\r\n          await dispatch(\r\n            changePassword(\r\n              values.oldPassword,\r\n              values.newPassword,\r\n            )\r\n          );\r\n        } catch (err) {\r\n          dispatch(setAlert({ message: 'Error', color: 'danger' }));\r\n        }\r\n      };\r\n    if(auth.user&& auth.idToken){\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n    return (\r\n        <div>\r\n            <Container className=\"mb-100 mt-150\">\r\n                {alert.isAlert && (\r\n                <Row className=\"mb-2\">\r\n                    <Col xs={12}>\r\n                    <Alert color={alert.color}>{alert.msg}</Alert>\r\n                    </Col>\r\n                </Row>\r\n                )}\r\n                <Formik\r\n                initialValues={{\r\n                    oldPassword: '',\r\n                    newPassword: ''\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    dispatch(clearAlert());\r\n                    if (!auth.isLoading) {\r\n                        handleSubmit(values);\r\n                    }\r\n                }}\r\n                >\r\n                {(props) => (\r\n                    <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col xs={12} md={8} lg={6}>\r\n                        <Card className=\"login-page bg-white shadow rounded border-0\">\r\n                            <CardBody>\r\n                            <h4 className=\"card-title text-center\">Change Password<span className=\"danger\">*</span></h4>\r\n                            <Form>\r\n                                <Row className=\"mt-4\">\r\n                                    <Col xs={12}>\r\n                                        <TextInput\r\n                                        label=\"Old Password\"\r\n                                        placeholder=\"Enter old password\"\r\n                                        name=\"oldPassword\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"mt-4\">\r\n                                    <Col xs={12}>\r\n                                        <TextInput\r\n                                        label=\"New Password\"\r\n                                        name=\"newPassword\"\r\n                                        placeholder=\"Enter new Password\"\r\n                                        type=\"password\"\r\n                                        required\r\n                                        />\r\n                                    </Col>\r\n                                    <Col xs={12} className=\"mt-2\">\r\n                                        <small className=\"text-dark mr-2\">\r\n                                        <em>\r\n                                            Password must have minimum 8 characters, 1\r\n                                            special character, 1 number & 1 uppercase\r\n                                            character.\r\n                                        </em>\r\n                                        </small>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"mt-4\">\r\n                                <Col xs={12}>\r\n                                    <Button color=\"primary\" type=\"submit\" block>\r\n                                    {user.isLoading ? (\r\n                                        <Spinner>idk</Spinner>\r\n                                    ) : (\r\n                                        <>Update</>\r\n                                    )}\r\n                                    </Button>\r\n                                </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            </CardBody>\r\n                        </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    </Container>\r\n                )}\r\n                </Formik>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePassword\r\n","C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\routes.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\config.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\addAvailability\\AddAvailability.jsx",["84","85","86","87","88","89","90","91","92"],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Login\\NewAdminLogin.jsx",["93","94"],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Profile\\Profile.jsx",["95"],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\Store\\configureStore.js",[],"C:\\Users\\SAATVIK\\Desktop\\projects\\reset-guruportal\\src\\views\\Layout\\Footer\\Footer.jsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"96","replacedBy":"100"},{"ruleId":"98","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":49,"column":5,"nodeType":"104","endLine":49,"endColumn":7,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"103","line":49,"column":8,"nodeType":"104","endLine":49,"endColumn":14,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":16,"nodeType":"109","messageId":"110","endLine":2,"endColumn":23},{"ruleId":"107","severity":1,"message":"111","line":12,"column":19,"nodeType":"109","messageId":"110","endLine":12,"endColumn":30},{"ruleId":"107","severity":1,"message":"112","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"113","line":15,"column":10,"nodeType":"109","messageId":"110","endLine":15,"endColumn":14},{"ruleId":"107","severity":1,"message":"114","line":2,"column":50,"nodeType":"109","messageId":"110","endLine":2,"endColumn":55},{"ruleId":"107","severity":1,"message":"115","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":21},{"ruleId":"107","severity":1,"message":"116","line":18,"column":11,"nodeType":"109","messageId":"110","endLine":18,"endColumn":16},{"ruleId":"107","severity":1,"message":"117","line":21,"column":11,"nodeType":"109","messageId":"110","endLine":21,"endColumn":17},{"ruleId":"107","severity":1,"message":"118","line":36,"column":12,"nodeType":"109","messageId":"110","endLine":36,"endColumn":14},{"ruleId":"107","severity":1,"message":"119","line":36,"column":15,"nodeType":"109","messageId":"110","endLine":36,"endColumn":20},{"ruleId":"107","severity":1,"message":"120","line":40,"column":22,"nodeType":"109","messageId":"110","endLine":40,"endColumn":34},{"ruleId":"107","severity":1,"message":"121","line":43,"column":11,"nodeType":"109","messageId":"110","endLine":43,"endColumn":13},{"ruleId":"102","severity":1,"message":"122","line":152,"column":7,"nodeType":"104","endLine":152,"endColumn":9,"suggestions":"123"},{"ruleId":"107","severity":1,"message":"112","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"113","line":15,"column":10,"nodeType":"109","messageId":"110","endLine":15,"endColumn":14},{"ruleId":"102","severity":1,"message":"124","line":33,"column":7,"nodeType":"104","endLine":33,"endColumn":9,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["128"],["129"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'setNavLinks' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'Label' is defined but never used.","'InputNumber' is defined but never used.","'query' is assigned a value but never used.","'toast1' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'setUploading' is assigned a value but never used.","'dt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAvailability'. Either include it or remove the dependency array.",["130"],"React Hook useEffect has missing dependencies: 'auth.idToken' and 'fetchGuruData'. Either include them or remove the dependency array.",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [dispatch]",{"range":"140","text":"141"},"Update the dependencies array to be: [auth, dispatch]",{"range":"142","text":"143"},"Update the dependencies array to be: [fetchAvailability]",{"range":"144","text":"145"},"Update the dependencies array to be: [auth.idToken, fetchGuruData]",{"range":"146","text":"147"},[1253,1255],"[dispatch]",[1494,1500],"[auth, dispatch]",[6331,6333],"[fetchAvailability]",[1204,1206],"[auth.idToken, fetchGuruData]"]